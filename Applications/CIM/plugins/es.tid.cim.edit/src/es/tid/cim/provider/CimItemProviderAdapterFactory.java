/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package es.tid.cim.provider;


import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import es.tid.cim.util.CimAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CimItemProviderAdapterFactory extends CimAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CimItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.CIM_Model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CIM_ModelItemProvider ciM_ModelItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.CIM_Model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCIM_ModelAdapter() {
		if (ciM_ModelItemProvider == null) {
			ciM_ModelItemProvider = new CIM_ModelItemProvider(this);
		}

		return ciM_ModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.BGPCluster} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BGPClusterItemProvider bgpClusterItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.BGPCluster}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBGPClusterAdapter() {
		if (bgpClusterItemProvider == null) {
			bgpClusterItemProvider = new BGPClusterItemProvider(this);
		}

		return bgpClusterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.BGPPeerGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BGPPeerGroupItemProvider bgpPeerGroupItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.BGPPeerGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBGPPeerGroupAdapter() {
		if (bgpPeerGroupItemProvider == null) {
			bgpPeerGroupItemProvider = new BGPPeerGroupItemProvider(this);
		}

		return bgpPeerGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.BGPService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BGPServiceItemProvider bgpServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.BGPService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBGPServiceAdapter() {
		if (bgpServiceItemProvider == null) {
			bgpServiceItemProvider = new BGPServiceItemProvider(this);
		}

		return bgpServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.AutonomousSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutonomousSystemItemProvider autonomousSystemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.AutonomousSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutonomousSystemAdapter() {
		if (autonomousSystemItemProvider == null) {
			autonomousSystemItemProvider = new AutonomousSystemItemProvider(this);
		}

		return autonomousSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.Network} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkItemProvider networkItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.Network}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkAdapter() {
		if (networkItemProvider == null) {
			networkItemProvider = new NetworkItemProvider(this);
		}

		return networkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ComputerSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComputerSystemItemProvider computerSystemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ComputerSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComputerSystemAdapter() {
		if (computerSystemItemProvider == null) {
			computerSystemItemProvider = new ComputerSystemItemProvider(this);
		}

		return computerSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.Directory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectoryItemProvider directoryItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.Directory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectoryAdapter() {
		if (directoryItemProvider == null) {
			directoryItemProvider = new DirectoryItemProvider(this);
		}

		return directoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.LogicalFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalFileItemProvider logicalFileItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.LogicalFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalFileAdapter() {
		if (logicalFileItemProvider == null) {
			logicalFileItemProvider = new LogicalFileItemProvider(this);
		}

		return logicalFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.UnitaryComputerSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitaryComputerSystemItemProvider unitaryComputerSystemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.UnitaryComputerSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitaryComputerSystemAdapter() {
		if (unitaryComputerSystemItemProvider == null) {
			unitaryComputerSystemItemProvider = new UnitaryComputerSystemItemProvider(this);
		}

		return unitaryComputerSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ArchitectureCheck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureCheckItemProvider architectureCheckItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ArchitectureCheck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArchitectureCheckAdapter() {
		if (architectureCheckItemProvider == null) {
			architectureCheckItemProvider = new ArchitectureCheckItemProvider(this);
		}

		return architectureCheckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ApplicationSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationSystemItemProvider applicationSystemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ApplicationSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationSystemAdapter() {
		if (applicationSystemItemProvider == null) {
			applicationSystemItemProvider = new ApplicationSystemItemProvider(this);
		}

		return applicationSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.BIOSElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BIOSElementItemProvider biosElementItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.BIOSElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBIOSElementAdapter() {
		if (biosElementItemProvider == null) {
			biosElementItemProvider = new BIOSElementItemProvider(this);
		}

		return biosElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.BIOSFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BIOSFeatureItemProvider biosFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.BIOSFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBIOSFeatureAdapter() {
		if (biosFeatureItemProvider == null) {
			biosFeatureItemProvider = new BIOSFeatureItemProvider(this);
		}

		return biosFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.CreateDirectoryAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateDirectoryActionItemProvider createDirectoryActionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.CreateDirectoryAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateDirectoryActionAdapter() {
		if (createDirectoryActionItemProvider == null) {
			createDirectoryActionItemProvider = new CreateDirectoryActionItemProvider(this);
		}

		return createDirectoryActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.CopyFileAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CopyFileActionItemProvider copyFileActionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.CopyFileAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCopyFileActionAdapter() {
		if (copyFileActionItemProvider == null) {
			copyFileActionItemProvider = new CopyFileActionItemProvider(this);
		}

		return copyFileActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DirectorySpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectorySpecificationItemProvider directorySpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DirectorySpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectorySpecificationAdapter() {
		if (directorySpecificationItemProvider == null) {
			directorySpecificationItemProvider = new DirectorySpecificationItemProvider(this);
		}

		return directorySpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DiskSpaceCheck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiskSpaceCheckItemProvider diskSpaceCheckItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DiskSpaceCheck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiskSpaceCheckAdapter() {
		if (diskSpaceCheckItemProvider == null) {
			diskSpaceCheckItemProvider = new DiskSpaceCheckItemProvider(this);
		}

		return diskSpaceCheckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ExecuteProgram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExecuteProgramItemProvider executeProgramItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ExecuteProgram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExecuteProgramAdapter() {
		if (executeProgramItemProvider == null) {
			executeProgramItemProvider = new ExecuteProgramItemProvider(this);
		}

		return executeProgramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.FileSpecification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileSpecificationItemProvider fileSpecificationItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.FileSpecification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFileSpecificationAdapter() {
		if (fileSpecificationItemProvider == null) {
			fileSpecificationItemProvider = new FileSpecificationItemProvider(this);
		}

		return fileSpecificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.InstalledProduct} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstalledProductItemProvider installedProductItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.InstalledProduct}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstalledProductAdapter() {
		if (installedProductItemProvider == null) {
			installedProductItemProvider = new InstalledProductItemProvider(this);
		}

		return installedProductItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.MemoryCheck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryCheckItemProvider memoryCheckItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.MemoryCheck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryCheckAdapter() {
		if (memoryCheckItemProvider == null) {
			memoryCheckItemProvider = new MemoryCheckItemProvider(this);
		}

		return memoryCheckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ModifySettingAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModifySettingActionItemProvider modifySettingActionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ModifySettingAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModifySettingActionAdapter() {
		if (modifySettingActionItemProvider == null) {
			modifySettingActionItemProvider = new ModifySettingActionItemProvider(this);
		}

		return modifySettingActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.OperatingSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperatingSystemItemProvider operatingSystemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.OperatingSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperatingSystemAdapter() {
		if (operatingSystemItemProvider == null) {
			operatingSystemItemProvider = new OperatingSystemItemProvider(this);
		}

		return operatingSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.OSVersionCheck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OSVersionCheckItemProvider osVersionCheckItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.OSVersionCheck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOSVersionCheckAdapter() {
		if (osVersionCheckItemProvider == null) {
			osVersionCheckItemProvider = new OSVersionCheckItemProvider(this);
		}

		return osVersionCheckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.RebootAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RebootActionItemProvider rebootActionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.RebootAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRebootActionAdapter() {
		if (rebootActionItemProvider == null) {
			rebootActionItemProvider = new RebootActionItemProvider(this);
		}

		return rebootActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.RemoveFileAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveFileActionItemProvider removeFileActionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.RemoveFileAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveFileActionAdapter() {
		if (removeFileActionItemProvider == null) {
			removeFileActionItemProvider = new RemoveFileActionItemProvider(this);
		}

		return removeFileActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.RemoveDirectoryAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoveDirectoryActionItemProvider removeDirectoryActionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.RemoveDirectoryAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoveDirectoryActionAdapter() {
		if (removeDirectoryActionItemProvider == null) {
			removeDirectoryActionItemProvider = new RemoveDirectoryActionItemProvider(this);
		}

		return removeDirectoryActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SettingCheck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SettingCheckItemProvider settingCheckItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SettingCheck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSettingCheckAdapter() {
		if (settingCheckItemProvider == null) {
			settingCheckItemProvider = new SettingCheckItemProvider(this);
		}

		return settingCheckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SoftwareElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareElementItemProvider softwareElementItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SoftwareElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareElementAdapter() {
		if (softwareElementItemProvider == null) {
			softwareElementItemProvider = new SoftwareElementItemProvider(this);
		}

		return softwareElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SoftwareElementVersionCheck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareElementVersionCheckItemProvider softwareElementVersionCheckItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SoftwareElementVersionCheck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareElementVersionCheckAdapter() {
		if (softwareElementVersionCheckItemProvider == null) {
			softwareElementVersionCheckItemProvider = new SoftwareElementVersionCheckItemProvider(this);
		}

		return softwareElementVersionCheckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SoftwareFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareFeatureItemProvider softwareFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SoftwareFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareFeatureAdapter() {
		if (softwareFeatureItemProvider == null) {
			softwareFeatureItemProvider = new SoftwareFeatureItemProvider(this);
		}

		return softwareFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SwapSpaceCheck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwapSpaceCheckItemProvider swapSpaceCheckItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SwapSpaceCheck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwapSpaceCheckAdapter() {
		if (swapSpaceCheckItemProvider == null) {
			swapSpaceCheckItemProvider = new SwapSpaceCheckItemProvider(this);
		}

		return swapSpaceCheckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.VersionCompatibilityCheck} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionCompatibilityCheckItemProvider versionCompatibilityCheckItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.VersionCompatibilityCheck}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionCompatibilityCheckAdapter() {
		if (versionCompatibilityCheckItemProvider == null) {
			versionCompatibilityCheckItemProvider = new VersionCompatibilityCheckItemProvider(this);
		}

		return versionCompatibilityCheckItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.BufferPool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BufferPoolItemProvider bufferPoolItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.BufferPool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBufferPoolAdapter() {
		if (bufferPoolItemProvider == null) {
			bufferPoolItemProvider = new BufferPoolItemProvider(this);
		}

		return bufferPoolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ConnectivityMemberhipSettingData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectivityMemberhipSettingDataItemProvider connectivityMemberhipSettingDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ConnectivityMemberhipSettingData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectivityMemberhipSettingDataAdapter() {
		if (connectivityMemberhipSettingDataItemProvider == null) {
			connectivityMemberhipSettingDataItemProvider = new ConnectivityMemberhipSettingDataItemProvider(this);
		}

		return connectivityMemberhipSettingDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ConnectivityCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectivityCollectionItemProvider connectivityCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ConnectivityCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectivityCollectionAdapter() {
		if (connectivityCollectionItemProvider == null) {
			connectivityCollectionItemProvider = new ConnectivityCollectionItemProvider(this);
		}

		return connectivityCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.NamedAddressCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedAddressCollectionItemProvider namedAddressCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.NamedAddressCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedAddressCollectionAdapter() {
		if (namedAddressCollectionItemProvider == null) {
			namedAddressCollectionItemProvider = new NamedAddressCollectionItemProvider(this);
		}

		return namedAddressCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.RangeOfIPAddresses} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeOfIPAddressesItemProvider rangeOfIPAddressesItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.RangeOfIPAddresses}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRangeOfIPAddressesAdapter() {
		if (rangeOfIPAddressesItemProvider == null) {
			rangeOfIPAddressesItemProvider = new RangeOfIPAddressesItemProvider(this);
		}

		return rangeOfIPAddressesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.LANConnectivitySegment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LANConnectivitySegmentItemProvider lanConnectivitySegmentItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.LANConnectivitySegment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLANConnectivitySegmentAdapter() {
		if (lanConnectivitySegmentItemProvider == null) {
			lanConnectivitySegmentItemProvider = new LANConnectivitySegmentItemProvider(this);
		}

		return lanConnectivitySegmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPConnectivitySubnet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPConnectivitySubnetItemProvider ipConnectivitySubnetItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPConnectivitySubnet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPConnectivitySubnetAdapter() {
		if (ipConnectivitySubnetItemProvider == null) {
			ipConnectivitySubnetItemProvider = new IPConnectivitySubnetItemProvider(this);
		}

		return ipConnectivitySubnetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPXConnectivityNetwork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPXConnectivityNetworkItemProvider ipxConnectivityNetworkItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPXConnectivityNetwork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPXConnectivityNetworkAdapter() {
		if (ipxConnectivityNetworkItemProvider == null) {
			ipxConnectivityNetworkItemProvider = new IPXConnectivityNetworkItemProvider(this);
		}

		return ipxConnectivityNetworkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPAddressRange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPAddressRangeItemProvider ipAddressRangeItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPAddressRange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPAddressRangeAdapter() {
		if (ipAddressRangeItemProvider == null) {
			ipAddressRangeItemProvider = new IPAddressRangeItemProvider(this);
		}

		return ipAddressRangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.LogicalNetwork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalNetworkItemProvider logicalNetworkItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.LogicalNetwork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalNetworkAdapter() {
		if (logicalNetworkItemProvider == null) {
			logicalNetworkItemProvider = new LogicalNetworkItemProvider(this);
		}

		return logicalNetworkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPXNetwork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPXNetworkItemProvider ipxNetworkItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPXNetwork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPXNetworkAdapter() {
		if (ipxNetworkItemProvider == null) {
			ipxNetworkItemProvider = new IPXNetworkItemProvider(this);
		}

		return ipxNetworkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.LANSegment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LANSegmentItemProvider lanSegmentItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.LANSegment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLANSegmentAdapter() {
		if (lanSegmentItemProvider == null) {
			lanSegmentItemProvider = new LANSegmentItemProvider(this);
		}

		return lanSegmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPSubnet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPSubnetItemProvider ipSubnetItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPSubnet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPSubnetAdapter() {
		if (ipSubnetItemProvider == null) {
			ipSubnetItemProvider = new IPSubnetItemProvider(this);
		}

		return ipSubnetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.AdminDomain} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdminDomainItemProvider adminDomainItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.AdminDomain}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdminDomainAdapter() {
		if (adminDomainItemProvider == null) {
			adminDomainItemProvider = new AdminDomainItemProvider(this);
		}

		return adminDomainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ElementSettingData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementSettingDataItemProvider elementSettingDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ElementSettingData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementSettingDataAdapter() {
		if (elementSettingDataItemProvider == null) {
			elementSettingDataItemProvider = new ElementSettingDataItemProvider(this);
		}

		return elementSettingDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ElementSoftwareIdentity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementSoftwareIdentityItemProvider elementSoftwareIdentityItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ElementSoftwareIdentity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementSoftwareIdentityAdapter() {
		if (elementSoftwareIdentityItemProvider == null) {
			elementSoftwareIdentityItemProvider = new ElementSoftwareIdentityItemProvider(this);
		}

		return elementSoftwareIdentityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.EnabledLogicalElementCapabilities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnabledLogicalElementCapabilitiesItemProvider enabledLogicalElementCapabilitiesItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.EnabledLogicalElementCapabilities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnabledLogicalElementCapabilitiesAdapter() {
		if (enabledLogicalElementCapabilitiesItemProvider == null) {
			enabledLogicalElementCapabilitiesItemProvider = new EnabledLogicalElementCapabilitiesItemProvider(this);
		}

		return enabledLogicalElementCapabilitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.GenericService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenericServiceItemProvider genericServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.GenericService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenericServiceAdapter() {
		if (genericServiceItemProvider == null) {
			genericServiceItemProvider = new GenericServiceItemProvider(this);
		}

		return genericServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.PowerManagementCapabilities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PowerManagementCapabilitiesItemProvider powerManagementCapabilitiesItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.PowerManagementCapabilities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPowerManagementCapabilitiesAdapter() {
		if (powerManagementCapabilitiesItemProvider == null) {
			powerManagementCapabilitiesItemProvider = new PowerManagementCapabilitiesItemProvider(this);
		}

		return powerManagementCapabilitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.Product} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductItemProvider productItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.Product}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductAdapter() {
		if (productItemProvider == null) {
			productItemProvider = new ProductItemProvider(this);
		}

		return productItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProtocolEndpointItemProvider protocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProtocolEndpointAdapter() {
		if (protocolEndpointItemProvider == null) {
			protocolEndpointItemProvider = new ProtocolEndpointItemProvider(this);
		}

		return protocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.RemotePort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemotePortItemProvider remotePortItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.RemotePort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemotePortAdapter() {
		if (remotePortItemProvider == null) {
			remotePortItemProvider = new RemotePortItemProvider(this);
		}

		return remotePortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.RemoteServiceAccessPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemoteServiceAccessPointItemProvider remoteServiceAccessPointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.RemoteServiceAccessPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRemoteServiceAccessPointAdapter() {
		if (remoteServiceAccessPointItemProvider == null) {
			remoteServiceAccessPointItemProvider = new RemoteServiceAccessPointItemProvider(this);
		}

		return remoteServiceAccessPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.Role} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleItemProvider roleItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.Role}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleAdapter() {
		if (roleItemProvider == null) {
			roleItemProvider = new RoleItemProvider(this);
		}

		return roleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ServiceAccessURI} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceAccessURIItemProvider serviceAccessURIItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ServiceAccessURI}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceAccessURIAdapter() {
		if (serviceAccessURIItemProvider == null) {
			serviceAccessURIItemProvider = new ServiceAccessURIItemProvider(this);
		}

		return serviceAccessURIItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SoftwareIdentity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareIdentityItemProvider softwareIdentityItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SoftwareIdentity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareIdentityAdapter() {
		if (softwareIdentityItemProvider == null) {
			softwareIdentityItemProvider = new SoftwareIdentityItemProvider(this);
		}

		return softwareIdentityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.StatusDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StatusDescriptionItemProvider statusDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.StatusDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStatusDescriptionAdapter() {
		if (statusDescriptionItemProvider == null) {
			statusDescriptionItemProvider = new StatusDescriptionItemProvider(this);
		}

		return statusDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SystemSpecificCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemSpecificCollectionItemProvider systemSpecificCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SystemSpecificCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemSpecificCollectionAdapter() {
		if (systemSpecificCollectionItemProvider == null) {
			systemSpecificCollectionItemProvider = new SystemSpecificCollectionItemProvider(this);
		}

		return systemSpecificCollectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.StorageExtent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StorageExtentItemProvider storageExtentItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.StorageExtent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStorageExtentAdapter() {
		if (storageExtentItemProvider == null) {
			storageExtentItemProvider = new StorageExtentItemProvider(this);
		}

		return storageExtentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.Memory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryItemProvider memoryItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.Memory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryAdapter() {
		if (memoryItemProvider == null) {
			memoryItemProvider = new MemoryItemProvider(this);
		}

		return memoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.VolatileStorage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VolatileStorageItemProvider volatileStorageItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.VolatileStorage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVolatileStorageAdapter() {
		if (volatileStorageItemProvider == null) {
			volatileStorageItemProvider = new VolatileStorageItemProvider(this);
		}

		return volatileStorageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.USBDevice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected USBDeviceItemProvider usbDeviceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.USBDevice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUSBDeviceAdapter() {
		if (usbDeviceItemProvider == null) {
			usbDeviceItemProvider = new USBDeviceItemProvider(this);
		}

		return usbDeviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.FilterList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterListItemProvider filterListItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.FilterList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterListAdapter() {
		if (filterListItemProvider == null) {
			filterListItemProvider = new FilterListItemProvider(this);
		}

		return filterListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.FilterEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterEntryItemProvider filterEntryItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.FilterEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterEntryAdapter() {
		if (filterEntryItemProvider == null) {
			filterEntryItemProvider = new FilterEntryItemProvider(this);
		}

		return filterEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPHeadersFilter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPHeadersFilterItemProvider ipHeadersFilterItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPHeadersFilter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPHeadersFilterAdapter() {
		if (ipHeadersFilterItemProvider == null) {
			ipHeadersFilterItemProvider = new IPHeadersFilterItemProvider(this);
		}

		return ipHeadersFilterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.EthernetPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EthernetPortItemProvider ethernetPortItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.EthernetPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEthernetPortAdapter() {
		if (ethernetPortItemProvider == null) {
			ethernetPortItemProvider = new EthernetPortItemProvider(this);
		}

		return ethernetPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.LogicalModule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalModuleItemProvider logicalModuleItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.LogicalModule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalModuleAdapter() {
		if (logicalModuleItemProvider == null) {
			logicalModuleItemProvider = new LogicalModuleItemProvider(this);
		}

		return logicalModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.LogicalPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalPortItemProvider logicalPortItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.LogicalPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalPortAdapter() {
		if (logicalPortItemProvider == null) {
			logicalPortItemProvider = new LogicalPortItemProvider(this);
		}

		return logicalPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.NetworkPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkPortItemProvider networkPortItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.NetworkPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkPortAdapter() {
		if (networkPortItemProvider == null) {
			networkPortItemProvider = new NetworkPortItemProvider(this);
		}

		return networkPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.USBPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected USBPortItemProvider usbPortItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.USBPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUSBPortAdapter() {
		if (usbPortItemProvider == null) {
			usbPortItemProvider = new USBPortItemProvider(this);
		}

		return usbPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.WirelessPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WirelessPortItemProvider wirelessPortItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.WirelessPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWirelessPortAdapter() {
		if (wirelessPortItemProvider == null) {
			wirelessPortItemProvider = new WirelessPortItemProvider(this);
		}

		return wirelessPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.WiFiPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WiFiPortItemProvider wiFiPortItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.WiFiPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWiFiPortAdapter() {
		if (wiFiPortItemProvider == null) {
			wiFiPortItemProvider = new WiFiPortItemProvider(this);
		}

		return wiFiPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ADSLModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ADSLModemItemProvider adslModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ADSLModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createADSLModemAdapter() {
		if (adslModemItemProvider == null) {
			adslModemItemProvider = new ADSLModemItemProvider(this);
		}

		return adslModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.CableModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CableModemItemProvider cableModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.CableModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCableModemAdapter() {
		if (cableModemItemProvider == null) {
			cableModemItemProvider = new CableModemItemProvider(this);
		}

		return cableModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DSLModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DSLModemItemProvider dslModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DSLModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDSLModemAdapter() {
		if (dslModemItemProvider == null) {
			dslModemItemProvider = new DSLModemItemProvider(this);
		}

		return dslModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ISDNModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISDNModemItemProvider isdnModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ISDNModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISDNModemAdapter() {
		if (isdnModemItemProvider == null) {
			isdnModemItemProvider = new ISDNModemItemProvider(this);
		}

		return isdnModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.HDSLModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HDSLModemItemProvider hdslModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.HDSLModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHDSLModemAdapter() {
		if (hdslModemItemProvider == null) {
			hdslModemItemProvider = new HDSLModemItemProvider(this);
		}

		return hdslModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SDSLModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SDSLModemItemProvider sdslModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SDSLModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSDSLModemAdapter() {
		if (sdslModemItemProvider == null) {
			sdslModemItemProvider = new SDSLModemItemProvider(this);
		}

		return sdslModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.VDSLModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VDSLModemItemProvider vdslModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.VDSLModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVDSLModemAdapter() {
		if (vdslModemItemProvider == null) {
			vdslModemItemProvider = new VDSLModemItemProvider(this);
		}

		return vdslModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.POTSModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected POTSModemItemProvider potsModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.POTSModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPOTSModemAdapter() {
		if (potsModemItemProvider == null) {
			potsModemItemProvider = new POTSModemItemProvider(this);
		}

		return potsModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.UniModem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniModemItemProvider uniModemItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.UniModem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniModemAdapter() {
		if (uniModemItemProvider == null) {
			uniModemItemProvider = new UniModemItemProvider(this);
		}

		return uniModemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ReplacementSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplacementSetItemProvider replacementSetItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ReplacementSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReplacementSetAdapter() {
		if (replacementSetItemProvider == null) {
			replacementSetItemProvider = new ReplacementSetItemProvider(this);
		}

		return replacementSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.MemoryCapacity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryCapacityItemProvider memoryCapacityItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.MemoryCapacity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMemoryCapacityAdapter() {
		if (memoryCapacityItemProvider == null) {
			memoryCapacityItemProvider = new MemoryCapacityItemProvider(this);
		}

		return memoryCapacityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.LANEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LANEndpointItemProvider lanEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.LANEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLANEndpointAdapter() {
		if (lanEndpointItemProvider == null) {
			lanEndpointItemProvider = new LANEndpointItemProvider(this);
		}

		return lanEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.OSPFProtocolEndpointBase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OSPFProtocolEndpointBaseItemProvider ospfProtocolEndpointBaseItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.OSPFProtocolEndpointBase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOSPFProtocolEndpointBaseAdapter() {
		if (ospfProtocolEndpointBaseItemProvider == null) {
			ospfProtocolEndpointBaseItemProvider = new OSPFProtocolEndpointBaseItemProvider(this);
		}

		return ospfProtocolEndpointBaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.OSPFVirtualInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OSPFVirtualInterfaceItemProvider ospfVirtualInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.OSPFVirtualInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOSPFVirtualInterfaceAdapter() {
		if (ospfVirtualInterfaceItemProvider == null) {
			ospfVirtualInterfaceItemProvider = new OSPFVirtualInterfaceItemProvider(this);
		}

		return ospfVirtualInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.OSPFProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OSPFProtocolEndpointItemProvider ospfProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.OSPFProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOSPFProtocolEndpointAdapter() {
		if (ospfProtocolEndpointItemProvider == null) {
			ospfProtocolEndpointItemProvider = new OSPFProtocolEndpointItemProvider(this);
		}

		return ospfProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.BGPProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BGPProtocolEndpointItemProvider bgpProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.BGPProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBGPProtocolEndpointAdapter() {
		if (bgpProtocolEndpointItemProvider == null) {
			bgpProtocolEndpointItemProvider = new BGPProtocolEndpointItemProvider(this);
		}

		return bgpProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPProtocolEndpointItemProvider ipProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPProtocolEndpointAdapter() {
		if (ipProtocolEndpointItemProvider == null) {
			ipProtocolEndpointItemProvider = new IPProtocolEndpointItemProvider(this);
		}

		return ipProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPXProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPXProtocolEndpointItemProvider ipxProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPXProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPXProtocolEndpointAdapter() {
		if (ipxProtocolEndpointItemProvider == null) {
			ipxProtocolEndpointItemProvider = new IPXProtocolEndpointItemProvider(this);
		}

		return ipxProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.MPLSProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MPLSProtocolEndpointItemProvider mplsProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.MPLSProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMPLSProtocolEndpointAdapter() {
		if (mplsProtocolEndpointItemProvider == null) {
			mplsProtocolEndpointItemProvider = new MPLSProtocolEndpointItemProvider(this);
		}

		return mplsProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SwitchPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwitchPortItemProvider switchPortItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SwitchPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwitchPortAdapter() {
		if (switchPortItemProvider == null) {
			switchPortItemProvider = new SwitchPortItemProvider(this);
		}

		return switchPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.TCPProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCPProtocolEndpointItemProvider tcpProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.TCPProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCPProtocolEndpointAdapter() {
		if (tcpProtocolEndpointItemProvider == null) {
			tcpProtocolEndpointItemProvider = new TCPProtocolEndpointItemProvider(this);
		}

		return tcpProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.UDPProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UDPProtocolEndpointItemProvider udpProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.UDPProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUDPProtocolEndpointAdapter() {
		if (udpProtocolEndpointItemProvider == null) {
			udpProtocolEndpointItemProvider = new UDPProtocolEndpointItemProvider(this);
		}

		return udpProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.CLPSettingData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CLPSettingDataItemProvider clpSettingDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.CLPSettingData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCLPSettingDataAdapter() {
		if (clpSettingDataItemProvider == null) {
			clpSettingDataItemProvider = new CLPSettingDataItemProvider(this);
		}

		return clpSettingDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.TelnetSettingData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TelnetSettingDataItemProvider telnetSettingDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.TelnetSettingData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTelnetSettingDataAdapter() {
		if (telnetSettingDataItemProvider == null) {
			telnetSettingDataItemProvider = new TelnetSettingDataItemProvider(this);
		}

		return telnetSettingDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SSHSettingData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SSHSettingDataItemProvider sshSettingDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SSHSettingData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSSHSettingDataAdapter() {
		if (sshSettingDataItemProvider == null) {
			sshSettingDataItemProvider = new SSHSettingDataItemProvider(this);
		}

		return sshSettingDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DHCPCapabilities} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DHCPCapabilitiesItemProvider dhcpCapabilitiesItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DHCPCapabilities}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDHCPCapabilitiesAdapter() {
		if (dhcpCapabilitiesItemProvider == null) {
			dhcpCapabilitiesItemProvider = new DHCPCapabilitiesItemProvider(this);
		}

		return dhcpCapabilitiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DHCPProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DHCPProtocolEndpointItemProvider dhcpProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DHCPProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDHCPProtocolEndpointAdapter() {
		if (dhcpProtocolEndpointItemProvider == null) {
			dhcpProtocolEndpointItemProvider = new DHCPProtocolEndpointItemProvider(this);
		}

		return dhcpProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.TelnetProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TelnetProtocolEndpointItemProvider telnetProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.TelnetProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTelnetProtocolEndpointAdapter() {
		if (telnetProtocolEndpointItemProvider == null) {
			telnetProtocolEndpointItemProvider = new TelnetProtocolEndpointItemProvider(this);
		}

		return telnetProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DNSProtocolEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DNSProtocolEndpointItemProvider dnsProtocolEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DNSProtocolEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDNSProtocolEndpointAdapter() {
		if (dnsProtocolEndpointItemProvider == null) {
			dnsProtocolEndpointItemProvider = new DNSProtocolEndpointItemProvider(this);
		}

		return dnsProtocolEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DNSSettingData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DNSSettingDataItemProvider dnsSettingDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DNSSettingData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDNSSettingDataAdapter() {
		if (dnsSettingDataItemProvider == null) {
			dnsSettingDataItemProvider = new DNSSettingDataItemProvider(this);
		}

		return dnsSettingDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.IPAssignmentSettingData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPAssignmentSettingDataItemProvider ipAssignmentSettingDataItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.IPAssignmentSettingData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPAssignmentSettingDataAdapter() {
		if (ipAssignmentSettingDataItemProvider == null) {
			ipAssignmentSettingDataItemProvider = new IPAssignmentSettingDataItemProvider(this);
		}

		return ipAssignmentSettingDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.WirelessLANEndpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WirelessLANEndpointItemProvider wirelessLANEndpointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.WirelessLANEndpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWirelessLANEndpointAdapter() {
		if (wirelessLANEndpointItemProvider == null) {
			wirelessLANEndpointItemProvider = new WirelessLANEndpointItemProvider(this);
		}

		return wirelessLANEndpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.WiFiEndPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WiFiEndPointItemProvider wiFiEndPointItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.WiFiEndPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWiFiEndPointAdapter() {
		if (wiFiEndPointItemProvider == null) {
			wiFiEndPointItemProvider = new WiFiEndPointItemProvider(this);
		}

		return wiFiEndPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.WiFiEndpointSettings} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WiFiEndpointSettingsItemProvider wiFiEndpointSettingsItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.WiFiEndpointSettings}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWiFiEndpointSettingsAdapter() {
		if (wiFiEndpointSettingsItemProvider == null) {
			wiFiEndpointSettingsItemProvider = new WiFiEndpointSettingsItemProvider(this);
		}

		return wiFiEndpointSettingsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ProtocolService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProtocolServiceItemProvider protocolServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ProtocolService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProtocolServiceAdapter() {
		if (protocolServiceItemProvider == null) {
			protocolServiceItemProvider = new ProtocolServiceItemProvider(this);
		}

		return protocolServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ConditioningService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditioningServiceItemProvider conditioningServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ConditioningService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditioningServiceAdapter() {
		if (conditioningServiceItemProvider == null) {
			conditioningServiceItemProvider = new ConditioningServiceItemProvider(this);
		}

		return conditioningServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.QoSService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QoSServiceItemProvider qoSServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.QoSService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQoSServiceAdapter() {
		if (qoSServiceItemProvider == null) {
			qoSServiceItemProvider = new QoSServiceItemProvider(this);
		}

		return qoSServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.PrecedenceService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrecedenceServiceItemProvider precedenceServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.PrecedenceService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrecedenceServiceAdapter() {
		if (precedenceServiceItemProvider == null) {
			precedenceServiceItemProvider = new PrecedenceServiceItemProvider(this);
		}

		return precedenceServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DiffServService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiffServServiceItemProvider diffServServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DiffServService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiffServServiceAdapter() {
		if (diffServServiceItemProvider == null) {
			diffServServiceItemProvider = new DiffServServiceItemProvider(this);
		}

		return diffServServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.EFService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EFServiceItemProvider efServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.EFService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEFServiceAdapter() {
		if (efServiceItemProvider == null) {
			efServiceItemProvider = new EFServiceItemProvider(this);
		}

		return efServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.AFService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AFServiceItemProvider afServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.AFService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAFServiceAdapter() {
		if (afServiceItemProvider == null) {
			afServiceItemProvider = new AFServiceItemProvider(this);
		}

		return afServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.Hdr8021PService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Hdr8021PServiceItemProvider hdr8021PServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.Hdr8021PService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHdr8021PServiceAdapter() {
		if (hdr8021PServiceItemProvider == null) {
			hdr8021PServiceItemProvider = new Hdr8021PServiceItemProvider(this);
		}

		return hdr8021PServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.DropThresholdCalculationService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DropThresholdCalculationServiceItemProvider dropThresholdCalculationServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.DropThresholdCalculationService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDropThresholdCalculationServiceAdapter() {
		if (dropThresholdCalculationServiceItemProvider == null) {
			dropThresholdCalculationServiceItemProvider = new DropThresholdCalculationServiceItemProvider(this);
		}

		return dropThresholdCalculationServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.FlowService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowServiceItemProvider flowServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.FlowService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowServiceAdapter() {
		if (flowServiceItemProvider == null) {
			flowServiceItemProvider = new FlowServiceItemProvider(this);
		}

		return flowServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.NextHopIPRoute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NextHopIPRouteItemProvider nextHopIPRouteItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.NextHopIPRoute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNextHopIPRouteAdapter() {
		if (nextHopIPRouteItemProvider == null) {
			nextHopIPRouteItemProvider = new NextHopIPRouteItemProvider(this);
		}

		return nextHopIPRouteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.AdministrativeDistance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdministrativeDistanceItemProvider administrativeDistanceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.AdministrativeDistance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdministrativeDistanceAdapter() {
		if (administrativeDistanceItemProvider == null) {
			administrativeDistanceItemProvider = new AdministrativeDistanceItemProvider(this);
		}

		return administrativeDistanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.NextHopRouting} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NextHopRoutingItemProvider nextHopRoutingItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.NextHopRouting}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNextHopRoutingAdapter() {
		if (nextHopRoutingItemProvider == null) {
			nextHopRoutingItemProvider = new NextHopRoutingItemProvider(this);
		}

		return nextHopRoutingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.RoutingPolicy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoutingPolicyItemProvider routingPolicyItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.RoutingPolicy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoutingPolicyAdapter() {
		if (routingPolicyItemProvider == null) {
			routingPolicyItemProvider = new RoutingPolicyItemProvider(this);
		}

		return routingPolicyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.ForwardingService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForwardingServiceItemProvider forwardingServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.ForwardingService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForwardingServiceAdapter() {
		if (forwardingServiceItemProvider == null) {
			forwardingServiceItemProvider = new ForwardingServiceItemProvider(this);
		}

		return forwardingServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.RoutingProtocolDomain} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoutingProtocolDomainItemProvider routingProtocolDomainItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.RoutingProtocolDomain}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoutingProtocolDomainAdapter() {
		if (routingProtocolDomainItemProvider == null) {
			routingProtocolDomainItemProvider = new RoutingProtocolDomainItemProvider(this);
		}

		return routingProtocolDomainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.NATService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NATServiceItemProvider natServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.NATService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNATServiceAdapter() {
		if (natServiceItemProvider == null) {
			natServiceItemProvider = new NATServiceItemProvider(this);
		}

		return natServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.NATStaticSettings} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NATStaticSettingsItemProvider natStaticSettingsItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.NATStaticSettings}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNATStaticSettingsAdapter() {
		if (natStaticSettingsItemProvider == null) {
			natStaticSettingsItemProvider = new NATStaticSettingsItemProvider(this);
		}

		return natStaticSettingsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.NATListBasedSettings} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NATListBasedSettingsItemProvider natListBasedSettingsItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.NATListBasedSettings}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNATListBasedSettingsAdapter() {
		if (natListBasedSettingsItemProvider == null) {
			natListBasedSettingsItemProvider = new NATListBasedSettingsItemProvider(this);
		}

		return natListBasedSettingsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SNMPCommunityStrings} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SNMPCommunityStringsItemProvider snmpCommunityStringsItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SNMPCommunityStrings}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSNMPCommunityStringsAdapter() {
		if (snmpCommunityStringsItemProvider == null) {
			snmpCommunityStringsItemProvider = new SNMPCommunityStringsItemProvider(this);
		}

		return snmpCommunityStringsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SNMPService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SNMPServiceItemProvider snmpServiceItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SNMPService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSNMPServiceAdapter() {
		if (snmpServiceItemProvider == null) {
			snmpServiceItemProvider = new SNMPServiceItemProvider(this);
		}

		return snmpServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link es.tid.cim.SNMPTrapTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SNMPTrapTargetItemProvider snmpTrapTargetItemProvider;

	/**
	 * This creates an adapter for a {@link es.tid.cim.SNMPTrapTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSNMPTrapTargetAdapter() {
		if (snmpTrapTargetItemProvider == null) {
			snmpTrapTargetItemProvider = new SNMPTrapTargetItemProvider(this);
		}

		return snmpTrapTargetItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (ciM_ModelItemProvider != null) ciM_ModelItemProvider.dispose();
		if (bgpClusterItemProvider != null) bgpClusterItemProvider.dispose();
		if (bgpPeerGroupItemProvider != null) bgpPeerGroupItemProvider.dispose();
		if (bgpServiceItemProvider != null) bgpServiceItemProvider.dispose();
		if (autonomousSystemItemProvider != null) autonomousSystemItemProvider.dispose();
		if (networkItemProvider != null) networkItemProvider.dispose();
		if (computerSystemItemProvider != null) computerSystemItemProvider.dispose();
		if (directoryItemProvider != null) directoryItemProvider.dispose();
		if (logicalFileItemProvider != null) logicalFileItemProvider.dispose();
		if (unitaryComputerSystemItemProvider != null) unitaryComputerSystemItemProvider.dispose();
		if (architectureCheckItemProvider != null) architectureCheckItemProvider.dispose();
		if (applicationSystemItemProvider != null) applicationSystemItemProvider.dispose();
		if (biosElementItemProvider != null) biosElementItemProvider.dispose();
		if (biosFeatureItemProvider != null) biosFeatureItemProvider.dispose();
		if (createDirectoryActionItemProvider != null) createDirectoryActionItemProvider.dispose();
		if (copyFileActionItemProvider != null) copyFileActionItemProvider.dispose();
		if (directorySpecificationItemProvider != null) directorySpecificationItemProvider.dispose();
		if (diskSpaceCheckItemProvider != null) diskSpaceCheckItemProvider.dispose();
		if (executeProgramItemProvider != null) executeProgramItemProvider.dispose();
		if (fileSpecificationItemProvider != null) fileSpecificationItemProvider.dispose();
		if (installedProductItemProvider != null) installedProductItemProvider.dispose();
		if (memoryCheckItemProvider != null) memoryCheckItemProvider.dispose();
		if (modifySettingActionItemProvider != null) modifySettingActionItemProvider.dispose();
		if (operatingSystemItemProvider != null) operatingSystemItemProvider.dispose();
		if (osVersionCheckItemProvider != null) osVersionCheckItemProvider.dispose();
		if (rebootActionItemProvider != null) rebootActionItemProvider.dispose();
		if (removeFileActionItemProvider != null) removeFileActionItemProvider.dispose();
		if (removeDirectoryActionItemProvider != null) removeDirectoryActionItemProvider.dispose();
		if (settingCheckItemProvider != null) settingCheckItemProvider.dispose();
		if (softwareElementItemProvider != null) softwareElementItemProvider.dispose();
		if (softwareElementVersionCheckItemProvider != null) softwareElementVersionCheckItemProvider.dispose();
		if (softwareFeatureItemProvider != null) softwareFeatureItemProvider.dispose();
		if (swapSpaceCheckItemProvider != null) swapSpaceCheckItemProvider.dispose();
		if (versionCompatibilityCheckItemProvider != null) versionCompatibilityCheckItemProvider.dispose();
		if (bufferPoolItemProvider != null) bufferPoolItemProvider.dispose();
		if (connectivityMemberhipSettingDataItemProvider != null) connectivityMemberhipSettingDataItemProvider.dispose();
		if (connectivityCollectionItemProvider != null) connectivityCollectionItemProvider.dispose();
		if (namedAddressCollectionItemProvider != null) namedAddressCollectionItemProvider.dispose();
		if (rangeOfIPAddressesItemProvider != null) rangeOfIPAddressesItemProvider.dispose();
		if (lanConnectivitySegmentItemProvider != null) lanConnectivitySegmentItemProvider.dispose();
		if (ipConnectivitySubnetItemProvider != null) ipConnectivitySubnetItemProvider.dispose();
		if (ipxConnectivityNetworkItemProvider != null) ipxConnectivityNetworkItemProvider.dispose();
		if (ipAddressRangeItemProvider != null) ipAddressRangeItemProvider.dispose();
		if (logicalNetworkItemProvider != null) logicalNetworkItemProvider.dispose();
		if (ipxNetworkItemProvider != null) ipxNetworkItemProvider.dispose();
		if (lanSegmentItemProvider != null) lanSegmentItemProvider.dispose();
		if (ipSubnetItemProvider != null) ipSubnetItemProvider.dispose();
		if (adminDomainItemProvider != null) adminDomainItemProvider.dispose();
		if (elementSettingDataItemProvider != null) elementSettingDataItemProvider.dispose();
		if (elementSoftwareIdentityItemProvider != null) elementSoftwareIdentityItemProvider.dispose();
		if (enabledLogicalElementCapabilitiesItemProvider != null) enabledLogicalElementCapabilitiesItemProvider.dispose();
		if (genericServiceItemProvider != null) genericServiceItemProvider.dispose();
		if (powerManagementCapabilitiesItemProvider != null) powerManagementCapabilitiesItemProvider.dispose();
		if (productItemProvider != null) productItemProvider.dispose();
		if (protocolEndpointItemProvider != null) protocolEndpointItemProvider.dispose();
		if (remotePortItemProvider != null) remotePortItemProvider.dispose();
		if (remoteServiceAccessPointItemProvider != null) remoteServiceAccessPointItemProvider.dispose();
		if (roleItemProvider != null) roleItemProvider.dispose();
		if (serviceAccessURIItemProvider != null) serviceAccessURIItemProvider.dispose();
		if (softwareIdentityItemProvider != null) softwareIdentityItemProvider.dispose();
		if (statusDescriptionItemProvider != null) statusDescriptionItemProvider.dispose();
		if (systemSpecificCollectionItemProvider != null) systemSpecificCollectionItemProvider.dispose();
		if (storageExtentItemProvider != null) storageExtentItemProvider.dispose();
		if (memoryItemProvider != null) memoryItemProvider.dispose();
		if (volatileStorageItemProvider != null) volatileStorageItemProvider.dispose();
		if (usbDeviceItemProvider != null) usbDeviceItemProvider.dispose();
		if (filterListItemProvider != null) filterListItemProvider.dispose();
		if (filterEntryItemProvider != null) filterEntryItemProvider.dispose();
		if (ipHeadersFilterItemProvider != null) ipHeadersFilterItemProvider.dispose();
		if (ethernetPortItemProvider != null) ethernetPortItemProvider.dispose();
		if (logicalModuleItemProvider != null) logicalModuleItemProvider.dispose();
		if (logicalPortItemProvider != null) logicalPortItemProvider.dispose();
		if (networkPortItemProvider != null) networkPortItemProvider.dispose();
		if (usbPortItemProvider != null) usbPortItemProvider.dispose();
		if (wirelessPortItemProvider != null) wirelessPortItemProvider.dispose();
		if (wiFiPortItemProvider != null) wiFiPortItemProvider.dispose();
		if (adslModemItemProvider != null) adslModemItemProvider.dispose();
		if (cableModemItemProvider != null) cableModemItemProvider.dispose();
		if (dslModemItemProvider != null) dslModemItemProvider.dispose();
		if (isdnModemItemProvider != null) isdnModemItemProvider.dispose();
		if (hdslModemItemProvider != null) hdslModemItemProvider.dispose();
		if (sdslModemItemProvider != null) sdslModemItemProvider.dispose();
		if (vdslModemItemProvider != null) vdslModemItemProvider.dispose();
		if (potsModemItemProvider != null) potsModemItemProvider.dispose();
		if (uniModemItemProvider != null) uniModemItemProvider.dispose();
		if (replacementSetItemProvider != null) replacementSetItemProvider.dispose();
		if (memoryCapacityItemProvider != null) memoryCapacityItemProvider.dispose();
		if (lanEndpointItemProvider != null) lanEndpointItemProvider.dispose();
		if (ospfProtocolEndpointBaseItemProvider != null) ospfProtocolEndpointBaseItemProvider.dispose();
		if (ospfVirtualInterfaceItemProvider != null) ospfVirtualInterfaceItemProvider.dispose();
		if (ospfProtocolEndpointItemProvider != null) ospfProtocolEndpointItemProvider.dispose();
		if (bgpProtocolEndpointItemProvider != null) bgpProtocolEndpointItemProvider.dispose();
		if (ipProtocolEndpointItemProvider != null) ipProtocolEndpointItemProvider.dispose();
		if (ipxProtocolEndpointItemProvider != null) ipxProtocolEndpointItemProvider.dispose();
		if (mplsProtocolEndpointItemProvider != null) mplsProtocolEndpointItemProvider.dispose();
		if (switchPortItemProvider != null) switchPortItemProvider.dispose();
		if (tcpProtocolEndpointItemProvider != null) tcpProtocolEndpointItemProvider.dispose();
		if (udpProtocolEndpointItemProvider != null) udpProtocolEndpointItemProvider.dispose();
		if (clpSettingDataItemProvider != null) clpSettingDataItemProvider.dispose();
		if (telnetSettingDataItemProvider != null) telnetSettingDataItemProvider.dispose();
		if (sshSettingDataItemProvider != null) sshSettingDataItemProvider.dispose();
		if (dhcpCapabilitiesItemProvider != null) dhcpCapabilitiesItemProvider.dispose();
		if (dhcpProtocolEndpointItemProvider != null) dhcpProtocolEndpointItemProvider.dispose();
		if (telnetProtocolEndpointItemProvider != null) telnetProtocolEndpointItemProvider.dispose();
		if (dnsProtocolEndpointItemProvider != null) dnsProtocolEndpointItemProvider.dispose();
		if (dnsSettingDataItemProvider != null) dnsSettingDataItemProvider.dispose();
		if (ipAssignmentSettingDataItemProvider != null) ipAssignmentSettingDataItemProvider.dispose();
		if (wirelessLANEndpointItemProvider != null) wirelessLANEndpointItemProvider.dispose();
		if (wiFiEndPointItemProvider != null) wiFiEndPointItemProvider.dispose();
		if (wiFiEndpointSettingsItemProvider != null) wiFiEndpointSettingsItemProvider.dispose();
		if (protocolServiceItemProvider != null) protocolServiceItemProvider.dispose();
		if (conditioningServiceItemProvider != null) conditioningServiceItemProvider.dispose();
		if (qoSServiceItemProvider != null) qoSServiceItemProvider.dispose();
		if (precedenceServiceItemProvider != null) precedenceServiceItemProvider.dispose();
		if (diffServServiceItemProvider != null) diffServServiceItemProvider.dispose();
		if (efServiceItemProvider != null) efServiceItemProvider.dispose();
		if (afServiceItemProvider != null) afServiceItemProvider.dispose();
		if (hdr8021PServiceItemProvider != null) hdr8021PServiceItemProvider.dispose();
		if (dropThresholdCalculationServiceItemProvider != null) dropThresholdCalculationServiceItemProvider.dispose();
		if (flowServiceItemProvider != null) flowServiceItemProvider.dispose();
		if (nextHopIPRouteItemProvider != null) nextHopIPRouteItemProvider.dispose();
		if (administrativeDistanceItemProvider != null) administrativeDistanceItemProvider.dispose();
		if (nextHopRoutingItemProvider != null) nextHopRoutingItemProvider.dispose();
		if (routingPolicyItemProvider != null) routingPolicyItemProvider.dispose();
		if (forwardingServiceItemProvider != null) forwardingServiceItemProvider.dispose();
		if (routingProtocolDomainItemProvider != null) routingProtocolDomainItemProvider.dispose();
		if (natServiceItemProvider != null) natServiceItemProvider.dispose();
		if (natStaticSettingsItemProvider != null) natStaticSettingsItemProvider.dispose();
		if (natListBasedSettingsItemProvider != null) natListBasedSettingsItemProvider.dispose();
		if (snmpCommunityStringsItemProvider != null) snmpCommunityStringsItemProvider.dispose();
		if (snmpServiceItemProvider != null) snmpServiceItemProvider.dispose();
		if (snmpTrapTargetItemProvider != null) snmpTrapTargetItemProvider.dispose();
	}

}
