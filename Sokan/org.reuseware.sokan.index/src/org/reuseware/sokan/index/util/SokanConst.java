package org.reuseware.sokan.index.util;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Common constant value used in Sokan.
 */
public final class SokanConst {

	private SokanConst() { }
	
	/**
	 * ID of the project nature used to associate a project with the index builder.
	 */
	public static final String ID_REPOSITORY_NATURE = "org.reuseware.sokan.resource.repositoryNature";
	/**
	 * ID of the index builder.
	 */
	public static final String ID_INDEX_BUILDER = "org.reuseware.sokan.resource.indexBuilder";
	/**
	 * ID of the store decorator used to decorate folders that are marked as stores.
	 */
	public static final String ID_STORE_DECORATOR = "org.reuseware.sokan.resource.storeDecorator";
	/**
	 * ID of the generated file decorator used to mark files that were generated by Sokan.
	 */
	public static final String ID_GEN_DECORATOR = "org.reuseware.sokan.resource.genDecorator";

	/**
	 * ID of the extension point:
	 * <i>org.reuseware.sokan.index</i>.
	 */
	public static final String EXP_INDEX_ID = "org.reuseware.sokan.index";
	/**
	 * Extension point attribute for registering an indexer.
	 */
	public static final String EXT_INDEXER = "indexer";
	/**
	 * Extension point attribute for registering an EModeler.
	 */
	public static final String EXT_EMODELER = "eModeler";
	/**
	 * Extension point attribute for registering a persister.
	 */
	public static final String EXT_PERSISTER = "persister";
	/**
	 * Extension point attribute for registering a load option.
	 */
	public static final String EXT_LOAD_OPTION = "loadOption";

	/**
	 * The separator used to separate ID segments in the single-string representation of an ID.
	 */
	public static final String SEPERATOR = "/";

	/**
	 * The logger used by Sokan.
	 */
	public static final Logger LOGGER = getLogger();
	/**
	 * The format used to represent a time stamp as string.
	 */
	public static final String DATE_FORMAT_NOW = "yyyy-MM-dd HH:mm:ss,SSS";

	private static Logger getLogger() {
		Logger logger = Logger.getLogger("SokanLog");

		// fh = new FileHandler("D:\\MyLogFile.log", true);
		// logger.addHandler(fh);
		logger.setLevel(Level.ALL);
		// SimpleFormatter formatter = new SimpleFormatter();
		// fh.setFormatter(formatter);
		return logger;
	}
}
