group Java;

interface(baselanguage,fragmentpackage,algebrapackage,type) ::= <<
/** 
 * File generated by Reusewair (do not edit!) 
 *
 */ 

package <fragmentpackage>;

import <algebrapackage>.I<baselanguage; format="capitalize">Fragment;

public interface I<type> extends I<baselanguage; format="capitalize">Fragment {

	public I<type> copy();  
}
>>

interfaceImpl(baselanguage,fragmentpackage,fragmentimplpackage,algebrapackage,type) ::= <<
/** 
 * File generated by Reusewair (do not edit!) 
 *
 */ 

package <fragmentimplpackage>;

import <fragmentpackage>.I<type>;
import <algebrapackage>.<baselanguage;format="capitalize">Algebra;

public class I<type>Impl extends <baselanguage;format="capitalize">Algebra implements I<type> {

	public I<type>Impl() {
		
	}
	
	/**
	 * Loading a fragment 
	 * 
	 * @param file
	 * @return
	 */
	public static I<type> load(String file) {
		I<type> construct = new I<type>Impl();
		load(construct, file); 
		return construct; 
	}

	/**
	 * Copy a fragment 
	 * 
	 * @ return
	 */
	public I<type> copy() { 
		I<type> copy = new I<type>Impl();
		copy(copy, this);
		return copy; 
	}

}
>>